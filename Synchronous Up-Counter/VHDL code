-- Synchronous Up-counter
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity up_counter is
    Generic (
        N : natural := 8 -- Width of the counter
    );
    Port (
        clk     : in  STD_LOGIC;
        rst     : in  STD_LOGIC;
        enable  : in  STD_LOGIC;
        count   : out STD_LOGIC_VECTOR (N-1 downto 0)
    );
end up_counter;

architecture behavioral of up_counter is
    signal count_reg : unsigned (N-1 downto 0) := (others => '0');
begin
    process (clk, rst)
    begin
        if (rst = '1') then
            count_reg <= (others => '0');
        elsif (rising_edge(clk)) then
            if (enable = '1') then
                count_reg <= count_reg + 1;
            end if;
        end if;
    end process;

    count <= STD_LOGIC_VECTOR(count_reg);

end behavioral;
